---
title: Welcome to Middleman
---
 
    <main id="main-doc">
      <section class="main-section" id="Introduction">
        <header>Introduction</header>
        <article>
          <p>
            JavaScript is a cross-platform, object-oriented scripting language.
            It is a small and lightweight language. Inside a host environment
            (for example, a web browser), JavaScript can be connected to the
            objects of its environment to provide programmatic control over
            them.
          </p>

          <p>
            JavaScript contains a standard library of objects, such as Array,
            Date, and Math, and a core set of language elements such as
            operators, control structures, and statements. Core JavaScript can
            be extended for a variety of purposes by supplementing it with
            additional objects; for example:
          </p>
          <ul>
            <li>
              Client-side JavaScript extends the core language by supplying
              objects to control a browser and its Document Object Model (DOM).
              For example, client-side extensions allow an application to place
              elements on an HTML form and respond to user events such as mouse
              clicks, form input, and page navigation.
            </li>
            <li>
              Server-side JavaScript extends the core language by supplying
              objects relevant to running JavaScript on a server. For example,
              server-side extensions allow an application to communicate with a
              database, provide continuity of information from one invocation to
              another of the application, or perform file manipulations on a
              server.
            </li>
          </ul>
        </article>
      </section>
      <%#?  end of section  %>
      <section class="main-section" id="What_you_should_already_know">
        <header>What you should already know</header>
        <article>
          <p>This guide assumes you have the following basic background:</p>

          <ul>
            <li>
              A general understanding of the Internet and the World Wide Web
              (WWW).
            </li>
            <li>Good working knowledge of HyperText Markup Language (HTML).</li>
            <li>
              Some programming experience. If you are new to programming, try
              one of the tutorials linked on the main page about JavaScript.
            </li>
          </ul>
        </article>
      </section>
      <section class="main-section" id="week1">
        <header>week 1</header>
        <article>
          <p>
            JavaScript and Java are similar in some ways but fundamentally
            different in some others. The JavaScript language resembles Java but
            does not have Java's static typing and strong type checking.
            JavaScript follows most Java expression syntax, naming conventions
            and basic control-flow constructs which was the reason why it was
            renamed from LiveScript to JavaScript.
        
        </article>
      </section>
      <section class="main-section" id="Hello_world">
        <header>Hello world</header>
        <article>
          To get started with writing JavaScript, open the Scratchpad and write
          your first "Hello world" JavaScript code:
          <code
            >function greetMe(yourName) { alert("Hello " + yourName); }
            greetMe("World");
          </code>

          Select the code in the pad and hit Ctrl+R to watch it unfold in your
          browser!
        </article>
      </section>
      <section class="main-section" id="Week4">
        <header>Week 4</header>
        <h1>Grounding: Detaching from Emotional Pain</h1>
<blockquote>
Ouotation
"No feeling is final." <br>
-Rainer Maria Rilke <br>
(20th-century German poet)
</blockquote>
      
HANDOUT
Detaching from Emotional Pain (Grounding)
Using Grounding to Detach from Emotional Pain
WHAT IS GROUNDING?
Grounding is a set of simple strategies to detach from emotional pain (e.g., drug cravings, self-harm impulses, anger, sadness. Distraction works by focusing outward on the external world, rather than inward toward the self. You can also think of it as "distraction," "centering." "a safe place,
" "looking outward," or "healthy detachment "
WHY DO GROUNDING?
When you are overwhelmed with emotional pain, you need a way to detach so that you can gain control over your feelings and stay safe. As long as you are grounding, you cannot possibly use substances or hurt yourself! Grounding
"anchors" you to the present and to reality.
Many people with PTSD and substance abuse struggle with feeling either too much (overwhelming emotions and memories) or too little (numbing and dissociation). In grounding, you attain a balance between the two: conscious of reality and able to tolerate it. Remember that pain is a feeling; it is not who you are. When you get caught up in it, it feels like you are your pain, and that is all that exists. But it is only one part of your experience-the others are just hidden and can be found again through grounding.
Guidelines
• Grounding can be done any time, any place, anywhere, and no one has to know.
• Use grounding when you are faced with a trigger, enraged, dissociating, having a substance craving, or whenever your emotional pain goes above 6 (on a 0-10 scale). Grounding puts healthy distance between you and these negative feelings.
• Keep your eves open, scan the room, and turn the light on to stay in touch with the present.
Rate vour mood before and after grounding, to test whether it worked. Before grounding, rate your level of emotional pain (0-10, where 10 means "extreme pain"). Then rerate it afterward. Has it gone down?
• No talking about negative feelings or journal writing -you want to distract away from negative feel-ings, not get in touch with them.
• Stay neutral-avoid judgments of "good" and "bad." For example, instead of "The walls are blue; I dislike blue because it reminds me of depression," simply say "The walls are blue" and move on.
+ Focus on the present, not the past or future.
Note that grounding is not the same as relaxation training. Grounding is much more active, focuses on distraction strategies, and is intended to help extreme negative feelings. It is believed to be more effective than relaxation training for PTSD.
WAYS OF GROUNDING
Three major ways of grounding are described below-mental, physical, and soothing. "Mental" means focusing your mind; "physical" means focusing on your senses (e.g., touch, hearing); and "soothing" means talking to yourself in a very kind way. You may find that one type works better for you, or all types may be helpful.
(cont.)
From Seeking Safety by Lisa M. Najavits (2002). Copyright by The Guilford Press. Permission to photocopy this form is granted to purchasers of this book for personal use only (see copyright page for details).
133u

Detaching from Emotional Pain (Grounding)
HANDOUT (page 2 of 3)
Mental Grounding
aN Describe vour environment in detail, using all your senses--for example, "The walls are white; there are five pink chairs; there is a wooden bookshelf against the wall.
" Describe objects, sounds, textures, colors, smells,
shapes, numbers, and temperature. You can do this anywhere. For example, on the subway: "I'm on the subway. I'II see the river soon. Those are the windows. This is the bench. The metal bar is silver. The subway map has four col-ors." w Play a "categories" game with yourself. Try to think of "types of dogs," "jazz musicians," "states that begin with 'A'," "cars," "TV shows," "writers," "sports," "songs," or "cities."
w Do an age progression. If you have regressed to a younger age (e.g., 8 years old), you can slowly work your way back up (e.g., "I'm now 9; I'm now 10; I'm now 11 ... ") until you are back to your current age.
so Describe an everyday activity in great detail. For example, describe a meal that you cook (e.g., "First I peel the potatoes and cut them into quarters; then I boil the water; then I make an herb marinade of oregano, basil, garlic, and olive oil ... ").
a Imagine. Use an image: Glide along on skates away from your pain; change the TV channel to get to a better show; think of a wall as a buffer between you and your pain.
a Say a safety statement. "My name is
; I am safe right now. I am in the present, not the past. I am
located in
_; the date is
Read something, saying each word to yourself. Or read each letter backward so that you focus on the letters and not on the meaning of words.
so Use humor. Think of something funny to jolt yourself out of your mood. a Count to 10 or say the alphabet, very s ... I ... o ... W .
.. I . . . y.
Physical Grounding
* Run cool or warm water over your hands.
* Grab. tightly onto your chair as hard as you can.
* Touch various objects around you a pen, keys, your clothing, the table, the walls. Notice textures, colors, materials, weight, temperature. Compare objects you touch: Is one colder? Lighter?
* Dig your heels into the floor-literally "grounding" them! Notice the tension centered in your heels as you do this. Remind yourself that you are connected to the ground.
* Carry a grounding object in your pocket--a small object (a small rock, clay, a ring, a piece of cloth or yarn) that you can touch whenever you feel triggered.
# Jump up and down.
* Notice your body: the weight of your body in the chair; wiggling your toes in your socks; the feel of your back against the chair. You are connected to the world.
* Stretch. Extend your fingers, arms, or legs as far as you can; roll your head around.
* Clench and release your fists.
* Walk slowly, noticing each footstep, saying "left" or "right" with each step.
* Eat something, describing the flavors in detail to yourself.
* Focus on your breathing, noticing each inhale and exhale. Repeat a pleasant word to yourself on each inhale (e.g., a favorite color, or a soothing word such as "safe" or "easy").
Soothing Grounding
+ Say kind statements, as if you were talking to a small child-for example, "You are a good person going through a hard time. You'll get through this."
+ Think of favorites. Think of your favorite color, animal, season, food, time of day, TV show.
(cont.)


Detaching from Emotional Pain (Grounding)
HANDOUT (page 3 of 3)
+ Picture people you care about (e.g., your children), and look at photographs of them.
+ Remember the words to an inspiring song, quotation, or poem that makes you feel better (e.g., the
AA Serenity Prayer).
+ Remember a safe place. Describe a place that you find very soothing (perhaps the beach or mountains, or a favorite room); focus on everything about that place--the sounds, colors, shapes, objects, textures.
+ Sav a coping statement: ' can handle this," "This feeling will pass."
+ Plan a safe treat for yourself, such as a piece of candy, a nice dinner, or a warm bath.
+ Think of things you are looking forward to in the next week-perhaps time with a friend, going to a movie, or going on a hike.
WHAT IF GROUNDING DOES NOT WORK?
Grounding does work! But, like any other skill, you need to practice to make it as powerful as possible. Below are suggestions to help make it work for you.
* Practice as often as possible, even when you don't need it, so that you'll know it by heart.
* Practice faster. Speeding up the pace gets you focused on the outside world quickly.
* Try grounding for a looooooonnnnngggg time (20-30 minutes). And repeat, repeat, repeat.
* Try to notice which methods you like best-physical, mental, or soothing grounding methods, or some combination.
* Create your own methods of grounding. Any method you make up may be worth much more than those you read here, because it is yours.
* Start grounding early in a negative mood cycle. Start when a substance craving just starts or when you have just started having a flashback. Start before anger gets out of control.
* Make up an index card on which you list your best grounding methods and how long to use them.
* Have others assist you in grounding. Teach friends or family about grounding, so that they can help guide you with it if you become overwhelmed.
* Prepare in advance. Locate places at home, in your car, and at work where you have materials and reminders for grounding.
* Create a cassette tape of a grounding message that you can play when needed. Consider asking your therapist or someone close to you to record it if you want to hear someone else's voice.
* Think about why grounding works. Why might it be that by focusing on the external world, you become more aware of an inner peacefulness? Notice the methods that work for you-why might those be more powerful for you than other methods?
* Don't give up!


Detaching from Emotional Pain (Grounding)
Ideas for a Commitment
Commit to one action that will move your life forward!
It can be anything you feel will help you, or you can try one of the ideas below.
Keeping your commitment is a way of respecting, honoring, and caring for yourself.
+ Option 1: Practice grounding for 10 minutes or more, rating your feelings before and after just as we did in
the session).
+ Option 2: Reread the handout, circling the methods that you most want to try.
+ Option 3: Find something to carry with you that helps you feel grounded (e.g., a small, beautiful rock; a picture of someone you love; an A chip you earned). Keep it in a place that you can access at any time, such as in your pocket or wallet, or on your key chain.
+ Option 4: Fill out the Safe Coping Sheet.
EXAMPLE OF THE SAFE COPING SHEET APPLIED TO THIS TOPIC
Old Way
Situation
Having a flashback.
* Your Coping *
I got stuck in it; it was awful. I tried to drown my feelings in three gin-and-tonics
Consequence
I just feel like I have no control over my feelings. I can't stop myself from drinking when I get overwhelmed.
New Way
Having a flashback.
I can try to cope with a flashback by doing grounding.
These are the ways that I think would work for me:
1. Run my hands under cool water.
2. Try to remember every major Red Sox player from the 1970s.
3. Turn on some music-loud, to drown out the flashback.
The intensity goes down-not completely away, but down enough so that I don't feel like I have to drink.
How safe is vour old way of coping?
How safe is your new way of coping?
Rate from 0 (not at all safe) to 10 (totally safe)
From Seeking Safety by Lisa M. Najavits (2002). Copyright by The Guilford Press. Permission to photocopy this form is granted to purchasers of this book for personal use only (see copyright page for details).
136



      </section>
      <section class="main-section" id="Declaring_variables">
        <header>Declaring variables</header>
        <article>
          You can declare a variable in three ways:
          <p>
            With the keyword var. For example, <code>var x = 42.</code> This
            syntax can be used to declare both local and global variables.
          </p>
          <p>
            By simply assigning it a value. For example,
            <code>x = 42.</code> This always declares a global variable. It
            generates a strict JavaScript warning. You shouldn't use this
            variant.
          </p>
          <p>
            With the keyword let. For example,<code> let y = 13.</code> This
            syntax can be used to declare a block scope local variable. See
            Variable scope below.
          </p>
        </article>
      </section>
      <section class="main-section" id="Variable_scope">
        <header>Variable scope</header>
        <article>
          <p>
            When you declare a variable outside of any function, it is called a
            global variable, because it is available to any other code in the
            current document. When you declare a variable within a function, it
            is called a local variable, because it is available only within that
            function.
          </p>

          <p>
            JavaScript before ECMAScript 2015 does not have block statement
            scope; rather, a variable declared within a block is local to the
            function (or global scope) that the block resides within. For
            example the following code will log 5, because the scope of x is the
            function (or global context) within which x is declared, not the
            block, which in this case is an if statement.
          </p>
          <code>if (true) { var x = 5; } console.log(x); // 5</code>
          <p>
            This behavior changes, when using the let declaration introduced in
            ECMAScript 2015.
          </p>

          <code
            >if (true) { let y = 5; } console.log(y); // ReferenceError: y is
            not defined</code
          >
        </article>
      </section>
      <section class="main-section" id="Global_variables">
        <header>Global variables</header>
        <article>
          <p>
            Global variables are in fact properties of the global object. In web
            pages the global object is window, so you can set and access global
            variables using the window.variable syntax.
          </p>

          <p>
            Consequently, you can access global variables declared in one window
            or frame from another window or frame by specifying the window or
            frame name. For example, if a variable called phoneNumber is
            declared in a document, you can refer to this variable from an
            iframe as parent.phoneNumber.
          </p>
        </article>
      </section>
      <section class="main-section" id="Constants">
        <header>Constants</header>
        <article>
          <p>
            You can create a read-only, named constant with the const keyword.
            The syntax of a constant identifier is the same as for a variable
            identifier: it must start with a letter, underscore or dollar sign
            and can contain alphabetic, numeric, or underscore characters.
          </p>

          <code>const PI = 3.14;</code>
          <p>
            A constant cannot change value through assignment or be re-declared
            while the script is running. It has to be initialized to a value.
          </p>

          <p>
            The scope rules for constants are the same as those for let block
            scope variables. If the const keyword is omitted, the identifier is
            assumed to represent a variable.
          </p>

          <p>
            You cannot declare a constant with the same name as a function or
            variable in the same scope. For example:
          </p>

          <code
            >// THIS WILL CAUSE AN ERROR function f() {}; const f = 5; // THIS
            WILL CAUSE AN ERROR ALSO function f() { const g = 5; var g;
            //statements }</code
          >
          However, object attributes are not protected, so the following
          statement is executed without problems.
          <code
            >const MY_OBJECT = {"key": "value"}; MY_OBJECT.key =
            "otherValue";</code
          >
        </article>
      </section>
      <section class="main-section" id="Data_types">
        <header>Data types</header>
        <article>
          <p>The latest ECMAScript standard defines seven data types:</p>
          <ul>
            <li>
              <p>Six data types that are primitives:</p>
              <ul>
                <li>Boolean. true and false.</li>
                <li>
                  null. A special keyword denoting a null value. Because
                  JavaScript is case-sensitive, null is not the same as Null,
                  NULL, or any other variant.
                </li>
                <li>
                  undefined. A top-level property whose value is undefined.
                </li>
                <li>Number. 42 or 3.14159.</li>
                <li>String. "Howdy"</li>
                <li>
                  Symbol (new in ECMAScript 2015). A data type whose instances
                  are unique and immutable.
                </li>
              </ul>
            </li>

            <li>and Object</li>
          </ul>
          Although these data types are a relatively small amount, they enable
          you to perform useful functions with your applications. Objects and
          functions are the other fundamental elements in the language. You can
          think of objects as named containers for values, and functions as
          procedures that your application can perform.
        </article>
      </section>
      <section class="main-section" id="if...else_statement">
        <header>if...else statement</header>
        <article>
          Use the if statement to execute a statement if a logical condition is
          true. Use the optional else clause to execute a statement if the
          condition is false. An if statement looks as follows:

          <code>if (condition) { statement_1; } else { statement_2; }</code>
          condition can be any expression that evaluates to true or false. See
          Boolean for an explanation of what evaluates to true and false. If
          condition evaluates to true, statement_1 is executed; otherwise,
          statement_2 is executed. statement_1 and statement_2 can be any
          statement, including further nested if statements.
          <p>
            You may also compound the statements using else if to have multiple
            conditions tested in sequence, as follows:
          </p>
          <code
            >if (condition_1) { statement_1; } else if (condition_2) {
            statement_2; } else if (condition_n) { statement_n; } else {
            statement_last; }
          </code>
          In the case of multiple conditions only the first logical condition
          which evaluates to true will be executed. To execute multiple
          statements, group them within a block statement ({ ... }) . In
          general, it's good practice to always use block statements, especially
          when nesting if statements:

          <code
            >if (condition) { statement_1_runs_if_condition_is_true;
            statement_2_runs_if_condition_is_true; } else {
            statement_3_runs_if_condition_is_false;
            statement_4_runs_if_condition_is_false; }</code
          >
          It is advisable to not use simple assignments in a conditional
          expression, because the assignment can be confused with equality when
          glancing over the code. For example, do not use the following code:
          <code>if (x = y) { /* statements here */ }</code> If you need to use
          an assignment in a conditional expression, a common practice is to put
          additional parentheses around the assignment. For example:

          <code>if ((x = y)) { /* statements here */ }</code>
        </article>
      </section>
      <section class="main-section" id="while_statement">
        <header>while statement</header>
        <article>
          A while statement executes its statements as long as a specified
          condition evaluates to true. A while statement looks as follows:

          <code>while (condition) statement</code> If the condition becomes
          false, statement within the loop stops executing and control passes to
          the statement following the loop.

          <p>
            The condition test occurs before statement in the loop is executed.
            If the condition returns true, statement is executed and the
            condition is tested again. If the condition returns false, execution
            stops and control is passed to the statement following while.
          </p>

          <p>
            To execute multiple statements, use a block statement ({ ... }) to
            group those statements.
          </p>

          Example:

          <p>
            The following while loop iterates as long as n is less than three:
          </p>

          <code>var n = 0; var x = 0; while (n &lt; 3) { n++; x += n; }</code>
          <p>
            With each iteration, the loop increments n and adds that value to x.
            Therefore, x and n take on the following values:
          </p>

          <ul>
            <li>After the first pass: n = 1 and x = 1</li>
            <li>After the second pass: n = 2 and x = 3</li>
            <li>After the third pass: n = 3 and x = 6</li>
          </ul>
          <p>
            After completing the third pass, the condition n &lt; 3 is no longer
            true, so the loop terminates.
          </p>
        </article>
      </section>
      <section class="main-section" id="Function_declarations">
        <header>Function declarations</header>
        <article>
          A function definition (also called a function declaration, or function
          statement) consists of the function keyword, followed by:

          <ul>
            <li>The name of the function.</li>
            <li>
              A list of arguments to the function, enclosed in parentheses and
              separated by commas.
            </li>
            <li>
              The JavaScript statements that define the function, enclosed in
              curly brackets, { }.
            </li>
          </ul>
          <p>
            For example, the following code defines a simple function named
            square:
          </p>

          <code>function square(number) { return number * number; }</code>
          <p>
            The function square takes one argument, called number. The function
            consists of one statement that says to return the argument of the
            function (that is, number) multiplied by itself. The return
            statement specifies the value returned by the function.
          </p>
          <code>return number * number;</code>
          <p>
            Primitive parameters (such as a number) are passed to functions by
            value; the value is passed to the function, but if the function
            changes the value of the parameter, this change is not reflected
            globally or in the calling function.
          </p>
        </article>
      </section>
      <section class="main-section" id="Reference">
        <header>Reference</header>
        <article>
          <ul>
            <li>
              All the documentation in this page is taken from
              <a
                href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide"
                target="_blank"
                >MDN</a
              >
            </li>
          </ul>
        </article>
      </section>
    </main>